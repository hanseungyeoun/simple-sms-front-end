import { createStore, createLogger } from "vuex";

const auth = {
  namespaced: true,
  state: () => ({
    user: {},
  }),
  mutations: {
    SET_USER(state, payload) {
      state.user = payload;
    },
  },
  actions: {
    setUser({ commit }, data) {
      commit("SET_USER", data);
    },
  },
  getters: {
    getUser(state) {
      return state.user;
    },
  },
};

const feeds = {
  namespaced: true,
  state: () => ({
    list: [
      {
        id: 5,
        img: require("../assets/images/img-dummy2.jpg"),
        like: 10,
        isLike: false,
        txt: "JAVASCRIPT...JAVASCRIPT...JAVASCRIPT",
        tag: ["JAVASCRIPT"],
        date: "2021. 3. 24.",
        comments: [
          { name: "뽀로로", txt: "그냥 바보가 아니고?" },
          { name: "크롱", txt: "크롱크롱크로오옹" },
        ],
      },
      {
        id: 4,
        img: require("../assets/images/img-dummy1.jpg"),
        like: 10,
        isLike: false,
        txt: "REACT...REACT...",
        tag: ["REACT"],
        date: "2021. 3. 24.",
        comments: [
          { name: "뽀로로", txt: "그냥 바보가 아니고?" },
          { name: "크롱", txt: "크롱크롱크로오옹" },
        ],
      },
      {
        id: 3,
        img: require("../assets/images/img-dummy3.jpg"),
        like: 10,
        isLike: false,
        txt: "VUEJS...VUEJS...VUEJS",
        tag: ["VUEJS"],
        date: "2021. 3. 24.",
        comments: [
          { name: "뽀로로", txt: "그냥 바보가 아니고?" },
          { name: "크롱", txt: "크롱크롱크로오옹" },
        ],
      },
      {
        id: 2,
        img: require("../assets/images/img-dummy2.jpg"),
        like: 10,
        isLike: false,
        txt: "2",
        tag: ["HTML", "CSS"],
        date: "2021. 3. 24.",
        comments: [
          { name: "뽀로로", txt: "그냥 바보가 아니고?" },
          { name: "크롱", txt: "크롱크롱크로오옹" },
        ],
      },
      {
        id: 1,
        img: require("../assets/images/img-dummy1.jpg"),
        like: 0,
        isLike: false,
        txt:
          "개발밖에 모르는 바보...개발밖에 모르는 바보...개발밖에 모르는 바보...개발밖에 모르는 바보...개발밖에 모르는 바보...✨",
        tag: ["HTML", "CSS"],
        date: "2021. 3. 24.",
        comments: [
          { name: "뽀로로", txt: "그냥 바보가 아니고?" },
          { name: "크롱", txt: "크롱크롱크로오옹" },
        ],
      },
    ],
  }),
  mutations: {
    ADD_FEED(state, payload) {
      state.list.unshift({
        id: state.list.length + 1,
        tag: [],
        like: 0,
        isLike: false,
        date: new Date(Date.now() - new Date().getTimezoneOffset() * 60000)
          .toISOString()
          .replace("T", " ")
          .substring(0, 10),
        comments: [],
        ...payload,
      });
    },
    ADD_COMMENT(state, { id, comment }) {
      state.list.find((item) => {
        if (item.id === id) {
          item.comments.push(comment);
          return true;
        }
      });
    },
    UPDATE_LIKE(state, { id, isLike }) {
      state.list.find((item) => {
        if (item.id === id) {
          item.isLike = isLike;
          if (isLike) {
            item.like++;
          } else {
            item.like--;
          }
          return true;
        }
      });
    },
  },
  actions: {
    addFeed({ commit }, data) {
      commit("ADD_FEED", data);
    },
    addComment({ commit }, data) {
      commit("ADD_COMMENT", data);
    },
    updateLike({ commit }, data) {
      commit("UPDATE_LIKE", data);
    },
  },
  getters: {
    getList(state) {
      return state.list;
    },
  },
};

export default createStore({
  modules: {
    auth,
    feeds,
  },
  plugins: [createLogger()],
});
